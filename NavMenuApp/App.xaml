<Application
    x:Class="NavMenuApp.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
    xmlns:fa="clr-namespace:FontAwesome.WPF;assembly=FontAwesome.WPF">
    <Application.Resources>
        <FontFamily x:Key="FontAwesome">/Fonts/fontawesomewebfont.ttf#FontAwesome</FontFamily>
        <SolidColorBrush x:Key="PrimaryDarkBrush" Color="#FF0D2738"/>
        <SolidColorBrush x:Key="PrimaryLightBrush" Color="#FF1F90FF"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <Style x:Key="NavigationListBoxStyle" TargetType="{x:Type ItemsControl}">
            <Setter Property="Background" Value="{StaticResource PrimaryDarkBrush}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ItemsControl}">
                        <Border Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            Padding="0"
                            SnapsToDevicePixels="true">
                            <ScrollViewer Padding="{TemplateBinding Padding}"
                                      Focusable="false">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NavigationButtonStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryDarkBrush}"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Width" Value="110"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="GroupName" Value="RadioButtons"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <ContentControl>
                            <Grid>
                                <Border Name="Bd" BorderThickness="0">
                                    <ContentPresenter/>
                                </Border>
                            </Grid>
                        </ContentControl>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True" >
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource PrimaryLightBrush}" />
                                <Setter TargetName="Bd" Property="BorderThickness" Value="3,0,3,0" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True" >
                                <Setter Property="IsChecked" Value="True" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True" >
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource PrimaryLightBrush}" />
                                <Setter TargetName="Bd" Property="BorderThickness" Value="3,0,3,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NavigationStackPanelStyle" TargetType="{x:Type StackPanel}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <DataTemplate x:Key="NavigationDataGeneralTemplate">
            <RadioButton x:Name="MenuGeneralButton" Style="{StaticResource NavigationButtonStyle}">
                <StackPanel Style="{StaticResource NavigationStackPanelStyle}">
                    <fa:ImageAwesome x:Name="MenuGeneralIcon" Foreground="{StaticResource PrimaryLightBrush}"  VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1"/>
                    <TextBlock x:Name="MenuGeneralLabel" Margin="5,0,0,0" Foreground="{StaticResource PrimaryLightBrush}" FontSize="10" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="0"></TextBlock>
                </StackPanel>
            </RadioButton>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding}" Value="Home">
                    <Setter TargetName="MenuGeneralIcon" Property="Icon" Value="Home"/>
                    <Setter TargetName="MenuGeneralLabel" Property="Text" Value="Home"/>
                    <Setter TargetName="MenuGeneralButton" Property="ToolTip" Value="Home"/>
                    <Setter TargetName="MenuGeneralButton" Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.NavigateHomeCommand}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Account">
                    <Setter TargetName="MenuGeneralIcon" Property="Icon" Value="UserCircle"/>
                    <Setter TargetName="MenuGeneralLabel" Property="Text" Value="Account"/>
                    <Setter TargetName="MenuGeneralButton" Property="ToolTip" Value="Account"/>
                    <Setter TargetName="MenuGeneralButton" Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.NavigateAccountCommand}"/>
                    <Setter TargetName="MenuGeneralButton" Property="Visibility" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.IsLoggedIn, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Login">
                    <Setter TargetName="MenuGeneralIcon" Property="Icon" Value="SignIn"/>
                    <Setter TargetName="MenuGeneralLabel" Property="Text" Value="Login"/>
                    <Setter TargetName="MenuGeneralButton" Property="ToolTip" Value="Login"/>
                    <Setter TargetName="MenuGeneralButton" Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.NavigateLoginCommand}"/>
                    <Setter TargetName="MenuGeneralButton" Property="Visibility" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.IsLoggedOut, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Register">
                    <Setter TargetName="MenuGeneralIcon" Property="Icon" Value="AddressBook"/>
                    <Setter TargetName="MenuGeneralLabel" Property="Text" Value="Register"/>
                    <Setter TargetName="MenuGeneralButton" Property="ToolTip" Value="Register"/>
                    <Setter TargetName="MenuGeneralButton" Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.NavigateRegisterCommand}"/>
                    <Setter TargetName="MenuGeneralButton" Property="Visibility" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.IsLoggedOut, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Delete Account">
                    <Setter TargetName="MenuGeneralIcon" Property="Icon" Value="Remove"/>
                    <Setter TargetName="MenuGeneralLabel" Property="Text" Value="Delete Account"/>
                    <Setter TargetName="MenuGeneralButton" Property="ToolTip" Value="Delete Account"/>
                    <Setter TargetName="MenuGeneralButton" Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.NavigateDeleteAccountCommand}"/>
                    <Setter TargetName="MenuGeneralButton" Property="Visibility" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.IsAccountPrivileged, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Update Account">
                    <Setter TargetName="MenuGeneralIcon" Property="Icon" Value="Refresh"/>
                    <Setter TargetName="MenuGeneralLabel" Property="Text" Value="Update Account"/>
                    <Setter TargetName="MenuGeneralButton" Property="ToolTip" Value="Update Account"/>
                    <Setter TargetName="MenuGeneralButton" Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.NavigateUpdateAccountCommand}"/>
                    <Setter TargetName="MenuGeneralButton" Property="Visibility" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.IsAccountPrivileged, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Logout">
                    <Setter TargetName="MenuGeneralIcon" Property="Icon" Value="SignOut"/>
                    <Setter TargetName="MenuGeneralLabel" Property="Text" Value="Logout"/>
                    <Setter TargetName="MenuGeneralButton" Property="ToolTip" Value="Logout"/>
                    <Setter TargetName="MenuGeneralButton" Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.LogoutCommand}"/>
                    <Setter TargetName="MenuGeneralButton" Property="Visibility" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.IsLoggedIn, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <x:Array x:Key="MenuGeneralOptions" Type="system:String">
            <system:String>Home</system:String>
            <system:String>Account</system:String>
            <system:String>Login</system:String>
            <system:String>Register</system:String>
            <system:String>Update Account</system:String>
            <system:String>Delete Account</system:String>
            <system:String>Logout</system:String>
        </x:Array>


        <DataTemplate x:Key="NavigationDataExtendedTemplate">
            <RadioButton x:Name="MenuExtendedButton" Style="{StaticResource NavigationButtonStyle}">
                <StackPanel Style="{StaticResource NavigationStackPanelStyle}">
                    <fa:ImageAwesome x:Name="MenuExtendedIcon" Foreground="{StaticResource PrimaryLightBrush}"  VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1"/>
                    <TextBlock x:Name="MenuExtendedLabel" Margin="5,0,0,0" Foreground="{StaticResource PrimaryLightBrush}" FontSize="10" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="0"></TextBlock>
                </StackPanel>
            </RadioButton>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding}" Value="Chat">
                    <Setter TargetName="MenuExtendedIcon" Property="Icon" Value="Comments"/>
                    <Setter TargetName="MenuExtendedLabel" Property="Text" Value="Chat"/>
                    <Setter TargetName="MenuExtendedButton" Property="ToolTip" Value="Chat"/>
                    <Setter TargetName="MenuExtendedButton" Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.NavigateChatCommand}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Inbox">
                    <Setter TargetName="MenuExtendedIcon" Property="Icon" Value="Inbox"/>
                    <Setter TargetName="MenuExtendedLabel" Property="Text" Value="Inbox"/>
                    <Setter TargetName="MenuExtendedButton" Property="ToolTip" Value="Inbox"/>
                    <Setter TargetName="MenuExtendedButton" Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.NavigateInboxCommand}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Accounts">
                    <Setter TargetName="MenuExtendedIcon" Property="Icon" Value="Group"/>
                    <Setter TargetName="MenuExtendedLabel" Property="Text" Value="Accounts"/>
                    <Setter TargetName="MenuExtendedButton" Property="ToolTip" Value="Accounts"/>
                    <Setter TargetName="MenuExtendedButton" Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.NavigateAccountsCommand}"/>
                    <Setter TargetName="MenuExtendedButton" Property="Visibility" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.IsAccountPrivileged, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Debug">
                    <Setter TargetName="MenuExtendedIcon" Property="Icon" Value="Bug"/>
                    <Setter TargetName="MenuExtendedLabel" Property="Text" Value="Debug"/>
                    <Setter TargetName="MenuExtendedButton" Property="ToolTip" Value="Debug"/>
                    <Setter TargetName="MenuExtendedButton" Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.NavigateDebugCommand}"/>
                    <Setter TargetName="MenuExtendedButton" Property="Visibility" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.IsAccountPrivileged, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <x:Array x:Key="MenuExtendedOptions" Type="system:String">
            <system:String>Chat</system:String>
            <system:String>Inbox</system:String>
            <system:String>Accounts</system:String>
            <system:String>Debug</system:String>
        </x:Array>


    </Application.Resources>
</Application>
